<project name="fitnesse-ivy-classpath" default="all" basedir="."
	xmlns:ivy="antlib:org.apache.ivy.ant">

	<property environment="env" />
	<property name="src" location="src" />
	<property name="classes" location="classes" />
	<property name="fitnesseRoot" value="FitNesseRoot" />
	<property name="port" value="8002" />
	
	<target name="build" depends="clean, compile" description="clean, then compile the source" />

	<target name="compile" depends="resolve" description="compile the source (make)">
		<mkdir dir="${classes}" />
		<javac srcdir="src" destdir="${classes}" classpathref="classpath" debug="true" source="1.6" target="1.6" />
	</target>

	<target name="clean" description="delete everything in the classes directory">
		<delete dir="${classes}" />
		<delete dir="test-results" />
		<delete dir="lib" />
		<delete dir="dist" />
		<delete dir="javadoc" />
	</target>

	<target name="test" depends="compile" description="run the unit tests">
		<mkdir dir="test-results" />
		<junit forkmode="once" fork="yes" printsummary="no" haltonfailure="yes" haltonerror="yes" dir="${basedir}">
			<classpath refid="classpath" />
			<formatter type="xml" usefile="true" />
			<formatter type="plain" usefile="false" />
		</junit>
	</target>

	<target name="run" depends="test" description="start FitNesse">
		<java classpathref="classpath" classname="fitnesseMain.FitNesseMain" fork="true" failonerror="true">
			<arg value="-p" />
			<arg value="${port}" />
		</java>
	</target>
	
	<!--
		Bundling
	  -->
	<target name="jar" depends="compile" description="generate the jar file">
		<mkdir dir="dist" />
		<delete file="dist/fitnesse-ivy-classpath.jar" />

		<jar jarfile="dist/fitnesse-ivy-classpath.jar" basedir="${classes}">
			<include name="**/*.class" />
			<exclude name="**/*Test.class" />
			<manifest>
				<attribute name="Built-By" value="Arjan Molenaar" />
			</manifest>
		</jar>
	</target>

	<target name="standalone-jar" depends="jar" description="generate the standalone jar file">
		<ivy:cachefileset setid="standalone.jar.fileset" conf="standalone" />
		<jar jarfile="dist/fitnesse-ivy-classpath-standalone.jar">
			<zipfileset src="dist/fitnesse-ivy-classpath.jar" />
			<zipgroupfileset refid="standalone.jar.fileset" />
			<manifest>
				<attribute name="Built-By" value="Arjan Molenaar" />
			</manifest>
		</jar>
	</target>


	<target name="sources-jar">
		<jar jarfile="dist/fitnesse-ivy-classpath-sources.jar" basedir="src">
			<include name="**" />
		</jar>
	</target>

	<target name="javadoc-jar" depends="compile">
		<mkdir dir="javadoc" />
		<javadoc sourcepath="src" destdir="javadoc" classpathref="classpath" />
		<jar jarfile="dist/fitnesse-ivy-classpath-javadoc.jar" basedir="javadoc" />
	</target>

	<!-- 
		Dependency resolution
	 -->
	<target name="resolve" depends="ivy-init">
		<ivy:resolve />
		<ivy:cachepath pathid="lib.classpath" />
		<path id="classpath">
			<pathelement path="${classes}" />
			<path refid="lib.classpath" />
		</path>
	</target>

	<target name="retrieve" depends="resolve" description="Copy dependencies to lib/, mainly for IDE's">
		<ivy:retrieve pattern="lib/[artifact].[ext]" />
	</target>
	
	<target name="pom" depends="resolve">
		<ivy:deliver deliverpattern="dist/ivy.xml" status="release" />
		<ivy:makepom ivyfile="${basedir}/dist/ivy.xml" templatefile="pom.xml.template" pomfile="${basedir}/dist/fitnesse-ivy-classpath.pom" conf="default,test">
			   <mapping conf="default" scope="compile"/>
			   <mapping conf="test" scope="test"/>
		</ivy:makepom>
	</target>

	<target name="snapshot" depends="resolve,pom">
		<ivy:publish resolver="sonatype-nexus-snapshots"
			publishivy="false">
			<artifacts pattern="dist/[artifact](-[classifier]).[ext]" />
		</ivy:publish>
	</target>

	<target name="publish" depends="jar,pom,standalone-jar,sources-jar,javadoc-jar">
		<fail unless="upload.user" message="supply upload.user on the command line"/>
		<fail unless="upload.password" message="supply upload.password on the command line"/>
		<fail unless="pgp.password" message="supply pgp.password on the command line"/>
		
		<ivy:publish resolver="sonatype-nexus-staging"
			publishivy="false">
			<artifacts pattern="dist/[artifact](-[classifier]).[ext]" />
		</ivy:publish>
	</target>

	<!--
		Dependency management boilerplate
	  -->
	<property name="maven.central.url" value="http://repo2.maven.org/maven2" />

	<available file="antlib/ivy.jar" type="file" property="have.ivy.jar"/>
	<available file="antlib/bcprov.jar" type="file" property="have.bcprov.jar"/>
	<available file="antlib/bcpg.jar" type="file" property="have.bcpg.jar"/>

	<condition property="ivy.download.not.required">
		<and>
			<istrue value="${have.ivy.jar}" />
			<istrue value="${have.bcprov.jar}" />
			<istrue value="${have.bcpg.jar}" />
		</and>
	</condition>

	<target name="ivy-init" depends="ivy-download">
		<path id="ivy.class.path">
			<fileset dir="antlib">
				<include name="*.jar"/>
			</fileset>
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml"
			uri="antlib:org.apache.ivy.ant"
			classpathref="ivy.class.path" />
	</target>

	<target name="ivy-download" unless="ivy.download.not.required">
		<mkdir dir="antlib" />
		<get src="${maven.central.url}/org/apache/ivy/ivy/2.3.0-rc1/ivy-2.3.0-rc1.jar" dest="antlib/ivy.jar" usetimestamp="true" verbose="true" />
		<!-- The following libs are used for signing artifacts when deployed to Maven Central.  -->
		<get src="${maven.central.url}/org/bouncycastle/bcprov-jdk16/1.46/bcprov-jdk16-1.46.jar" dest="antlib/bcprov.jar" usetimestamp="true" verbose="true" />
		<get src="${maven.central.url}/org/bouncycastle/bcpg-jdk16/1.46/bcpg-jdk16-1.46.jar" dest="antlib/bcpg.jar" usetimestamp="true" verbose="true" />
	</target>
</project>
